{"name":"Generator-prototype","tagline":"You want to build prototypes in a smart and effective way? Just check out PG!","body":"<p align=\"center\"><img src=\"http://prototype-generator.com/img/logo-pg.png\" height=\"94\"></p>\r\n\r\n<p align=\"center\">Visit the PG-website to learn how to use PG: http://prototype-generator.com </p>\r\n\r\n> [Yeoman][yeoman] generator for Prototype [![NPM version](https://badge.fury.io/js/generator-prototype.svg)](http://badge.fury.io/js/generator-prototype) [![Build Status](https://travis-ci.org/Prototype-Group/generator-prototype.svg)](https://travis-ci.org/Prototype-Group/generator-prototype)\r\n\r\n[![NPM](https://nodei.co/npm/generator-prototype.png?downloads=true&stars=true)](https://nodei.co/npm/generator-prototype/)\r\n\r\n\r\n## Getting started\r\n\r\n### Requirements\r\n\r\n* Node.js & Node Package Manager\r\n* Grunt Command Line Interface – npm install -g grunt-cli\r\n\r\n**Optional Use of Ruby (SASS & Compass)**\r\n* SASS 3.4 (only when you do not want to use node-sass) – gem install sass\r\n* Compass 1 (because of Source Maps) – gem install compass --pre \r\n\r\n### Installation \r\n\r\n- Install Yeoman:\r\n    `npm install -g yo`\r\n\r\n- Install the Generator-Prototype via:\r\n    `npm install -g generator-prototype`\r\n\r\n### Update\r\n- Update the Generator-Prototype via:\r\n    `npm update -g generator-prototype`\r\n\r\n## Usage\r\n\r\n### Scaffold your new prototype project.\r\n\r\n```bash\r\nyo prototype\r\n```\r\n\r\n#### Options\r\n\r\n* `-s` alias `--skip-install`\r\n\r\n  Skips the automatic execution of `bower` and `npm` after scaffolding has finished.\r\n\r\n## Quick Start\r\nYou can scaffold your project in an instance. The first question is:\r\n\r\n```\r\n\"Choose your installation routine\"\r\n```\r\n\r\nIf you choose `Minimal installation` you skip the rest of the questions and get the default values with:\r\n * Libsass (grunt-sass)\r\n * Grunt Modules: grunt-grunticon, grunt-data-separator\r\n * Assemble as Template Engine\r\n\r\n## Structure\r\n\r\n``` bash\r\n├───helpers\r\n│   ├───configs\r\n│   ├───templates\r\n│   │   ├───grunticon-template\r\n│   │   └───styleguide-template\r\n│   └───_grunt\r\n├───resources\r\n│   ├───ajax\r\n│   ├───assets\r\n│   │   ├───fonts\r\n│   │   ├───img\r\n│   │   │   ├───svg\r\n│   │   │   │   └───icons\r\n│   │   └───media\r\n│   ├───bower-components\r\n│   ├───data\r\n│   ├───js\r\n│   ├───scss\r\n│   │   ├───global\r\n│   │   ├───icons\r\n│   │   └───utils\r\n│   │       ├───extends\r\n│   │       └───mixins\r\n│   └───templates\r\n│       ├───helpers\r\n│       ├───layouts\r\n│       ├───pages\r\n│       └───partials\r\n├───_dist\r\n└───_output\r\n```\r\n\r\n## Plugins and Modules\r\n\r\nThere are standard grunt modules I use. These are:\r\n\r\n * [grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean) - Clean your directories.\r\n * [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) - Run grunt tasks concurrently .\r\n * [grunt-contrib-cssmin](https://github.com/gruntjs/grunt-contrib-cssmin) - Minify your CSS.\r\n * [grunt-htmlhint](https://github.com/yaniswang/grunt-htmlhint) - Check your html for errors.\r\n * [grunt-contrib-jshint](https://github.com/gruntjs/grunt-contrib-jshint) - Check your js for errors.\r\n * [grunt-jsbeautifier](https://github.com/vkadam/grunt-jsbeautifier) - Format your js and html files.\r\n * [grunt-combine-media-queries](https://github.com/stefanjudis/grunt-combine-media-queries) - When you use mixins for media queries in your SASS files, you can combine your media queries with this module\r\n * [jit-grunt](https://github.com/shootaroo/jit-grunt) - A JIT(Just In Time) plugin loader for Grunt.\r\n * [time-grunt](https://github.com/sindresorhus/time-grunt) - Displays the execution time of grunt tasks.\r\n \r\n### Grunt modules\r\n\r\n**But you can also apply additional addons and grunt modules to your project. Just choose specific ones:**\r\n\r\n * [grunt-autoprefixer](https://github.com/nDmitry/grunt-autoprefixer) - Autoprefixer parses CSS and adds vendor-prefixed CSS properties using the Can I Use database.\r\n * [grunt-bless](https://github.com/stefanjudis/grunt-bless) - Split your css after you reach size limit for ie9\r\n * [grunt-browser-sync](https://npmjs.org/package/grunt-browser-sync) - Sync and auto-reload your local server over multiple devices\r\n * [grunt-comment-media-queries](https://github.com/cruncher/grunt-comment-media-queries) - You begin your project with mobile first but need to support desktop styles in IE8? That's your module! (see _Features_)\r\n * [grunt-comment-toggler](https://github.com/Cryszon/grunt-comment-toggler) - Toggle comments inside build blocks.\r\n * [grunt-connect-proxy](https://github.com/drewzboto/grunt-connect-proxy) - a preconfigured proxy for developing clientside API interfaces in your prototype, with CORS, Basic Authentication support and http methods\r\n * [grunt-contrib-compass](https://github.com/gruntjs/grunt-contrib-compass) - Come on, use Node-SASS ...\r\n * [grunt-contrib-htmlmin](https://github.com/gruntjs/grunt-contrib-htmlmin) - Minify your HTML files.\r\n * [grunt-contrib-requirejs](https://github.com/gruntjs/grunt-contrib-requirejs) - Optimize RequireJS projects using r.js.\r\n * [grunt-contrib-uglify](https://github.com/gruntjs/grunt-contrib-uglify) - Minify files with UglifyJS.\r\n * [grunt-csscomb](https://github.com/csscomb/grunt-csscomb) - The grunt plugin for sorting CSS properties in specific order.\r\n * [grunt-devtools](https://github.com/vladikoff/grunt-devtools) - An user interface in chrome to execute grunt tasks in your project\r\n * [grunt-data-separator](https://github.com/Sebastian-Fitzner/grunt-data-separator) - Split up your Data-URI into a separate CSS file.\r\n * [grunt-dr-svg-sprites](https://github.com/drdk/grunt-dr-svg-sprites) - Generate SVG Sprites with scss files (we use an own fork to support placeholders in scss) \r\n * [grunt-grunticon](https://github.com/filamentgroup/grunticon) - Generate SVG-URI-SASS files with png fallbacks\r\n * [grunt-jsdoc](https://github.com/krampstudio/grunt-jsdoc) - This plugin enables you to integrate the generation of comments based documentation into your Grunt build.\r\n * [grunt-modernizr](https://github.com/Modernizr/grunt-modernizr) - grunt-modernizr sifts through your project files, gathers up your references to Modernizr tests and outputs a lean, mean Modernizr machine.\r\n * [grunt-packager](https://github.com/bobbor/grunt-packager) (only executable when your project.jspackcfg is configured) - package your js.\r\n * [grunt-phantomas](https://github.com/stefanjudis/grunt-phantomas) - PhantomJS-based web performance metrics collector and monitoring tool.\r\n * [grunt-photobox](https://github.com/stefanjudis/grunt-photobox) - Take snapshots from homepage\r\n * [grunt-responsive-images](https://github.com/andismith/grunt-responsive-images) - Produces images at different sizes (be sure you have installed GraphicsMagick)\r\n * [grunt-sass](https://github.com/sindresorhus/grunt-sass) - You want to use Libsass instead of Compass to render your stylesheets 10 times faster? Here you go! (see _Features_)\r\n * [grunt-svgmin](https://github.com/sindresorhus/grunt-svgmin) - Minify SVG using SVGO.\r\n * [grunt-version](https://github.com/kswedberg/grunt-version) - Grunt task to handle versioning of a project.\r\n\r\n### Assemble\r\nWe use Assemble as template engine. Assemble is a component and static site generator that makes it dead simple to build modular sites, documentation and components from reusable templates and data.\r\nYou want to know more? Here you go: [assemble.io](http://assemble.io)\r\n\r\nIn your installation routine you can choose specific modules for Assemble:\r\n\r\n * assemble-contrib-permalinks\r\n * assemble-contrib-sitemap\r\n * assemble-related-pages\r\n \r\n#### Custom Helpers\r\nWe provide some custom helpers to speed up your prototyping. These helpers provide:\r\n\r\n* repeating elements\r\n* limiting JSON output\r\n* partials with multiple contexts\r\n* factories for grid systems\r\n* and a few more ... \r\n\r\nYou want to know more? See [PG Custom Helpers](http://prototype-generator.com/templating-in-pg/template-helpers.html)\r\n\r\n## Gruntfile\r\nFor our Gruntfile we use the grunt module [load-grunt-configs](https://github.com/creynders/load-grunt-configs/) to split up the file in multiple task files. \r\nYou can find these task files in the following directory:\r\n\r\n * helpers/_grunt\r\n\r\n## Features\r\nPG supports different features. Just check/uncheck them in the __custom installation routine__:\r\n\r\n* You want to add a separate distribution folder? - Check!\r\n* You want to add a CSS Styleguide and Assemble Development Documenation? - Check! (See \"Developer Documentation\")\r\n* You want to use Libsass instead of Ruby to compile SASS files? - Check!\r\n* You want to use [PG Methodology](http://www.prototype-generator.com/pg-methodology/pg-methodology-overview.html)? - Check!\r\n* You begin your project with mobile first but need to support desktop styles in IE8? - Check!\r\n\r\n## JS Libraries and CSS Frameworks\r\nYou can choose JS Libraries like:\r\n\r\n* jQuery\r\n* BackboneJS\r\n* RequireJS\r\n* AngularJS\r\n\r\nAnd you can also choose SCSS Frameworks like:\r\n\r\n* Foundation\r\n* Bourbon Neat\r\n* SASS Bootstrap\r\n\r\nAll files will be included and configured. Have fun!\r\n\r\n## Sub Generators\r\nWe integrated some sub generators for you: \r\n\r\n### BackboneJS: \r\n \r\n * Create a Backbone Model: yo prototype:bm\r\n * Create a Backbone View: yo prototype:bv\r\n * Create a Backbone Collection: yo prototype:bc\r\n\r\n### Grunt Modules:\r\nYou forgot a grunt module?\r\n* Install your grunt modules: yo prototype:gm\r\n\r\n### Frontend Components:\r\nYou want to install all base templates, a form template or other modules? _(work in progress)_\r\n* Here you go: yo prototype:components\r\n\r\nOthers will follow.\r\n\r\n## Developer Documentation\r\nPG provides a way to document your assemble modules via markdown and a separate docs folder. \r\nJust use the custom installation route and check: \r\n* _Create Developer Documentation_\r\n\r\nFor further informations and instructions see: \r\n* [assemble-documentation-example](https://github.com/Sebastian-Fitzner/assemble-documentation-example)\r\n\r\n## Alternative\r\n* [grunt-init-assemble](https://github.com/assemble/grunt-init-assemble)\r\n* [generator-assemble](https://github.com/assemble/generator-assemble)\r\n\r\n## License\r\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\r\n\r\n[yeoman]: http://yeoman.io/\r\n\r\n## Release History\r\n\r\n### v0.4.69\r\n- grunt-jsdoc@beta added with custom configs\r\n- prototype:gm => added grunt-jsdoc, grunt-contrib-requirejs, grunt-comment-toggler\r\n- Refactored index.js to prepare PG for Gulp support\r\n\r\n### v0.4.68\r\n- Split custom partial helper and factory helper\r\n- Added possibility to extend options in Assemble to activate factories\r\n\r\n### v0.4.67\r\n- Added grunt-comment-toggler for RequireJS\r\n- Changed components/c-article.hbs\r\n\r\n### v0.4.65\r\n\r\n**General**\r\n- Refactored Gruntfile.js\r\n- Added loadCSS.js to load CSS Styles asynchronous\r\n\r\n**Assemble**\r\n- Added custom helper-partial.js\r\n- Added support for assemble factories\r\n- Added Regions Readme.md\r\n\r\n**SASS**\r\n- Added custom breakpoint mixin\r\n\r\n### v0.4.64\r\n- Fixed bug with version block\r\n- Fixed async task\r\n- Added c-form.scss \r\n\r\n### v0.4.63\r\n- Added `Regions` for PG Frontend Methodology\r\n- Modified form component \r\n- Deleted batch files\r\n- Refactored bower directory in demo files\r\n- Added almond and grunt-contrib-requirejs \r\n\r\n### v0.4.62\r\n- Optimized package.json \r\n- Integrated git submodule for components\r\n- Integrated {{#ifBlock}} helper\r\n\r\n### v0.4.61\r\n- Minor change in svg-sprites task \r\n- Bugfix with version.js\r\n- Mixin: spriteicon() added\r\n- Updated prototype:gm to support automated download of grunt-text-replace\r\n- Changed path for prototype:plugin\r\n\r\n### v0.4.60\r\n- Updated grunt-photobox to support grunt-browser-sync or grunt-contrib-connect\r\n- Changed output of photobox to Dev folder\r\n\r\n### v0.4.59\r\n- Changed Standard Installation to Minimal Installation\r\n- Optimized svg-sprites and svgmin workflow\r\n- Changed classes fo PG Frontend Methodology\r\n\r\n### v0.4.58\r\n- Added fork of grunt-dr-svg-sprites and dr-svg-sprites to support placeholders in scss files\r\n- Changed replace.js to change file path\r\n- Added PG Frontend Methodology\r\n\r\n## TODO: \r\n- Tests\r\n- Integrate Broccoli.js as option","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}