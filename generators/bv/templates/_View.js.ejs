/**
* @module <%= initName %>
*
* @author
*/

define([
	'jquery',
	'backbone'<% if(tpl === true){ %>,
	'text!templates/<%= path %><%= initName %>.html'<% } %>
],
	function($, Backbone<% if(tpl === true){ %>, template<% } %>){

		var <%= initName %> = Backbone.View.extend({
			// The DOM Element associated with this view
			el: '.yourElement',

			// Options
			options: {
			},

			// View Event Handlers
			events: {
			},

			// View constructor
			initialize: function(obj) {
				this.options = _.defaults(obj.options || {}, this.options); // get/set default options using Underscore
				<% if(tpl === true){ %>
				this.template = _.template(template, {}); // Setting the view's template property using the Underscore template method
				<% } %>
			},

			// Renders the view's template to the UI
			render: function() {
				<% if(tpl === true){ %>
				// Dynamically updates the UI with the view's template
				this.$el.html(this.template());
				<% } %>
				// Maintains chainability
				return this;
			}
		});
		// Returns the View class
		return <%= initName %>;
	}
);
