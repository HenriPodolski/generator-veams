var config = require('./helpers/config');
var gulp = require('gulp');
var requireDir = require('require-dir');
var dir = requireDir(config.options.paths.tasks);
var runSequence = require('run-sequence').use(gulp);

<% if (taskRunner && taskRunner.indexOf('grunt') !== -1) { %>
require('gulp-grunt')(gulp); // add all the gruntfile tasks to gulp<% } %>
// Default task
gulp.task('default', function () {
	gulp.start('serve');
});

/**
 * Static Server
 *
 */
gulp.task('serve', ['sass-globbing', 'styles'], function () {

	config.server({
		server: config.options.paths.dev
	});

	// SCSS
	gulp.watch(config.options.paths.src + "/scss/**/*.scss", ['styles']);

	// JS
	gulp.watch([
		config.options.paths.src + "/js/**/*.js",
		config.options.paths.src + "/js/**/*.html"
	], ['scripts']);

	// Reload
	gulp.watch([
		config.options.paths.dev + "/*.html",
		config.options.paths.dev + "/js/*.js",
		config.options.paths.dev + "/css/*.css"
	]).on('change', config.server.reload);
});

/**
 * Build Task
 *
 */
gulp.task('build', function(callback) {
	runSequence(
		'clean:dev',
		[
			'copy:assets',
			'copy:ajax'
		],
		'styles-dist',<% if (gulpModules && (gulpModules.indexOf('gulp-requirejs-optimize') !== -1 || gulpModules.indexOf('browserify') !== -1)) { %>
		'scripts',<% } else { %>
		'copy:js',<% } %><% if (gulpModules && gulpModules.indexOf('gulp-htmlhint') !== -1) { %>
		'html-hint',<% } %><% if (gulpModules && gulpModules.indexOf('gulp-jshint') !== -1) { %>
		'js-hint',<% } %>
		callback
	);
});
<% if (features && features.indexOf('createDevFolder') != -1) { %>
/**
 * Dist Task
 *
 */
gulp.task('dist', ['build'], function(callback) {
	runSequence(
		'clean:dist',
		'copy:dist'
	);
});<% } %>