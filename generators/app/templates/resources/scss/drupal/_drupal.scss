/* 	====================================
	Standard Styles In Drupal
	====================================  */

/* General
========================================= */
/**
 * Markup free clearing.
 *
 * @see http://perishablepress.com/press/2009/12/06/new-clearfix-hack
 */

.clearfix:after {
	content: ".";
	display: block;
	height: 0;
	clear: both;
	visibility: hidden;
}

/* IE6 */
* html .clearfix {
	height: 1%;
}

/* IE7 */
*:first-child + html .clearfix {
	min-height: 1%;
}

/* Page elements
========================================= */

// All menu trees get this class, such as the navigation menu.
.menu {
}

// Lists of links, including Primary and Secondary links in the page header, and also node links and taxonomy terms (see below).
.links {
}

// The role of this class is to hide elements from all users (both visually and screen-readers). This class should be used for elements which should not be immediately displayed to any user.
.element-hidden, .hidden {
}

// The role of this class is to hide elements visually, but keep them available for screen-readers. This class should be used for information required for screen-reader users to understand and use the site, where visual display is undesirable. Information provided in this manner should be kept concise, to avoid unnecessary burden on the user. An example would be the title of a menu.
.element-invisible, .visually-hidden {
}

//The element-focusable (D7) or focusable (D8) class extends the element-invisible (D7) or visually-hidden (D8) class to allow the element to be focusable when navigated to via the keyboard. An example would be the "Skip to content" and "Skip to menu" links at the top of most themes.
.element-invisible.element-focusable, .visually-hidden.focusable {
}

// The role of this class is to hide elements from all users but maintain the visual layout (i.e.: a blank space where the element would be if visible).
.invisible {
}

/* Node elements
========================================= */

// A wrapper div around all of a node, including its title.
.node {
}

// The title of the node.
.node-title {
}

// The body of the node. This will include additions other modules make, such as uploaded files or CCK fields.
.content {
}

// Applied to any UL that is a list of links, including Primary and Secondary links in the page header, and also node links and taxonomy terms (see below). Node links however get the .links class on their enclosing DIV.
.links {
}

// Taxonomy terms, which also get .links and .inline.
.terms {
}

// This is a system class for styling UL items into a horizontal line.
.inline {
}

// RSS feed icons, usually at the foot of the page content area.
.feed-icon {
}

/* Blocks
========================================= */
.block {
}

/* Core Block ID's In Drupal ASC */

// Active forum topics
#block-forum-active {
}

// Author information
#block-profile-author-information {
}

// Book navigation
#block-book-navigation {
}

// Language switcher
#block-locale-language-switcher {
}

// Most recent poll
#block-poll-recent {
}

// Navigation
#block-system-navigation {
}

// New forum topics
#block-forum-new {
}

// Popular content
#block-statistics-popular {
}

// Powered by Drupal
#block-system-powered-by {
}

// Recent blog posts
#block-blog-recent {
}

// Recent comments
#block-comment-recent {
}

// Search form
#block-search-form {
}

// Syndicate
#block-node-syndicate {
}

// User login
#block-user-login {
}

// Who's new
#block-user-new {
}

// Who's online
#block-user-online {
}
